.container
  %h1 New task

  - if stage != :first
    .card.mb-2
      .card-body.py-1
        %small.text-muted.text-uppercase.d-flex.justify-content-between.mb-1
          %span Referral details
          = link_to "Edit", nil
        %dl.mb-0.row
          %dt.col-5 Location
          %dd.col-7.text-muted= @referral.postcode
          %dt.col-5 Task details
          %dd.col-7.text-muted
            #{@referral.volunteers_needed} volunteers needed for #{@referral.duration} minutes
            - if preferences_summary(@referral).present?
              %br
              Task involves
              = referral_preferences_summary(@referral)
          - if @referral.time_slots.any?
            %dt.col-5 Times slots
            %dd.col-7.text-muted
              %ul.list-unstyled.small.mb-0
                - matches_by_time = @matches.group_by(&:started_at)
                - @referral.time_slots.each do |time_slot|
                  %li
                    = time_slot.started_at.to_s(:short)
                    - if matches_by_time[time_slot.started_at]
                      - matches_by_time[time_slot.started_at].each do |match|
                        %span.badge.badge-info
                          %i.fa.fa-walking
                          = match.size

= case stage
- when :first then render "stage_first"
- when :when then render "stage_when"
- when :calendar then render "stage_calendar"
- when :date then render "stage_date"
- when :time then render "stage_time"
- when :task then render "stage_task"

- content_for(:debug) do
  %code= params.inspect
  %br
  %code= @referral.inspect
  %br
  %code= @referral.time_slots.inspect

  = render "shared/weekly_schedule_heat_map", schedule: @result.joint_schedule if @result
