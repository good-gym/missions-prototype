:ruby
  calendar = Calendar.new(date)
  matches = Availability.near(@availability.postcode, @availability.radius)
    .in_month(calendar.date)
    .grouped_by_date
  owner_matches = Availability.owned_by(current_user).in_month(calendar.date).grouped_by_date
  referrals = Referral.near(@availability.postcode, @availability.radius).in_month(calendar.date).grouped_by_date

.container
  .d-flex.justify-content-between.align-items-start
    .lead
      %strong.d-block Pick dates for your mission
      %span Select as many days as you'd like - we'll only assign 1 mission.
    = link_to "#help", class: "btn btn-warning btn-sm", title: "Help" do
      %i.fa.fa-question-circle
      %span.d-none.d-sm-inline Help

  = simple_form_for(@availability, url: new_availability_path, method: "get") do |f|
    = f.error_notification
    = f.input :postcode_str, as: :hidden
    = f.input :radius, as: :hidden

    .mb-2.sm-flush
      = render_calendar(calendar: calendar, matches: matches) do |day|
        - if day.month == calendar.date.month
          %label.text-center.mb-0{ class: day.past? ? "text-muted" : "" }
            %span{ class: day == Date.today ? "calendar__date--today" : "" }
              = day.day

            .mb-0.text-center
              - if day.past?
              - elsif (day - 3).past?
                = modal_button("on-call-modal", class: "btn btn-link") do
                  %i.far.fa-clock
              - else
                .mx-auto= check_box_tag("dates[]", day, false, disabled: day.past?)
                - if referrals[day].present?
                  %span.badge.badge-success
                    %i.fa.fa-user
                    = referrals[day]
                - if matches[day].present?
                  %span.badge.badge-info
                    %i.fa.fa-walking
                    = matches[day]
                - elsif owner_matches[day].present?
                  %span.badge.badge-success
                    %i.fa.fa-thumbs-up
                    = owner_matches[day]
                - else
                  %span &nbsp;
        - else
          .text-muted= day.day

    %p= f.submit "Next step", class: "btn btn-secondary btn-block btn-lg"

%hr
.container#help
  = render "availabilities/stage_date/help", matches: matches, owner_matches: owner_matches

= modal("on-call-modal") do
  .modal-header.bg-warning
    .d-flex.align-items-center
      .display-4.mr-1
        %i.far.fa-clock
      %h4.mb-0 It's too late to book missions for this day
    %button.close{ "data-dismiss" => "modal", type: "button" }
      %span Ã—
  .modal-body
    %p.lead
      You must book missions at least 3 days in advance.
    %p
      If you'd like to do missions at the last minute, why not
      #{link_to("register for mission alerts", todo_path)}?
  .modal-footer
    %button.btn.btn-secondary{ "data-dismiss" => "modal", type: "button" }
      Ok
